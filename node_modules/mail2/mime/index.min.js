const util=require("util");const Stream=require("stream");const types=require("./types");function MIME(b){Stream.call(this);this.buffer="";this.headers={};this.body={};for(var a in b){this[a]=b[a]}return this}MIME.CRLF="\n";MIME.TYPES=types;MIME.PARSE_STATUS={BODY:0,PART_HEADER:1,PART_BODY:2,END:-1};util.inherits(MIME,Stream);MIME.q=function(a){return"<"+a+">"};MIME.kv=function(a,b){return[a,b].join(": ")};MIME.trim=function(a){return a.replace(/^"|"$/,"")};MIME.filter=function(a){return !!a.trim()};MIME.extension=function(a){return MIME.TYPES[a].extensions};MIME.lookup=function(a){var b=a.replace(/.*[\.\/\\]/,"").toLowerCase();return Object.keys(MIME.TYPES).filter(function(c){var d=MIME.TYPES[c];return ~(d.extensions||[]).indexOf(b)})[0]};var aliaes={from:"From",to:"To",cc:"Cc",bcc:"Bcc"};Object.keys(aliaes).forEach(function(a){MIME.prototype.__defineGetter__(a,function(){return this.headers[aliaes[a]]});MIME.prototype.__defineSetter__(a,function(b){this.headers[aliaes[a]]=b})});MIME.prototype.header=function(a,b){this.headers[a]=b;return this};MIME.prototype.write=function(a){this.buffer+=a;var b=MIME.CRLF+MIME.CRLF;var c=this.buffer.indexOf(b);if(c>-1){var d=this.buffer.substr(0,c);this.headers=MIME.parseHeaders(d);this.emit("headers",this.headers);this.buffer=this.buffer.substr(c)}return this};MIME.prototype.end=function(a){if(a){this.write(a)}var b=this.headers["Content-Type"];this.body=MIME.parseBody(this.buffer,b);this.emit("body",this.body);this.emit("end",this);return this};MIME.prototype.toString=function(){var b=[],a=this;Object.keys(this.headers).forEach(function(c){b.push(MIME.kv(c,a.headers[c]))});b.push(null);b.push(this.body._);return b.join("\n")};MIME.parse=function(a,c){var b=new MIME();if(typeof c==="undefined"){return b.end(a)}else{return b.parseBody(a,c)}};MIME.parseAddress=function(a){var d=(a.replace(/^(.+@)/g,"").replace(/>/,""));var b=(a.match(/^(?:.+<)?(.+)@.+$/)[1]);var c=(a.match(/^(.+)<.+>$/)||[])[1]||"";return{host:d,user:b,name:c,address:[b,d].join("@")}};MIME.parseHeaders=function(a){return a.replace(/\n\s+/g,"").split(MIME.CRLF).filter(MIME.filter).map(MIME.parseHeader).reduce(function(c,d){for(var b in d){c[b]=d[b]}return c},{})};MIME.parseHeader=function(e){var c={};var d=e.indexOf(":");if(d>-1){var b=e.substr(0,d).trim();var a=e.substr(++d).trim();c[b]=MIME.parseHeaderValue(a)}return c};MIME.parseHeaderValue=function(b){var a={};b.split(/;\s?/).map(function(c){c=MIME.trim(c);var d=c.match(/^(.+?)=(.*)$/);if(d){a[MIME.trim(d[1])]=MIME.trim(d[2])}else{a._=c}});return a};MIME.parseBody=function(f,g){var d=-1,e="",a={_:""};var c=MIME.PARSE_STATUS.BODY;var b=(f||"").toString().split(MIME.CRLF);if(typeof g==="string"){g=MIME.parseHeaderValue(g)}while(b.length){line=b.shift();if(line=="--$--".replace("$",g.boundary)){c=MIME.PARSE_STATUS.END;break}if(line=="--$".replace("$",g.boundary)){c=MIME.PARSE_STATUS.PART_HEADER;continue}switch(c){case MIME.PARSE_STATUS.BODY:a._+=line;break;case MIME.PARSE_STATUS.PART_HEADER:if(line.trim()==""){c=MIME.PARSE_STATUS.PART_BODY;a[++d]={body:"",headers:MIME.parseHeaders(e)};e="";continue}e+=line+MIME.CRLF;break;case MIME.PARSE_STATUS.PART_BODY:a[d].body+=line;break}}return a};module.exports=MIME;