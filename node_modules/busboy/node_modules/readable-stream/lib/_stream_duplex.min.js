module.exports=Duplex;var objectKeys=Object.keys||function(c){var b=[];for(var a in c){b.push(a)}return b};var util=require("core-util-is");util.inherits=require("inherits");var Readable=require("./_stream_readable");var Writable=require("./_stream_writable");util.inherits(Duplex,Readable);forEach(objectKeys(Writable.prototype),function(a){if(!Duplex.prototype[a]){Duplex.prototype[a]=Writable.prototype[a]}});function Duplex(a){if(!(this instanceof Duplex)){return new Duplex(a)}Readable.call(this,a);Writable.call(this,a);if(a&&a.readable===false){this.readable=false}if(a&&a.writable===false){this.writable=false}this.allowHalfOpen=true;if(a&&a.allowHalfOpen===false){this.allowHalfOpen=false}this.once("end",onend)}function onend(){if(this.allowHalfOpen||this._writableState.ended){return}process.nextTick(this.end.bind(this))}function forEach(b,d){for(var c=0,a=b.length;c<a;c++){d(b[c],c)}};