"use strict";var Buffer=require("buffer").Buffer;module.exports=function(a){var c=undefined;a.supportsNodeEncodingsExtension=!(new Buffer(0) instanceof Uint8Array);a.extendNodeEncodings=function b(){if(c){return}c={};if(!a.supportsNodeEncodingsExtension){console.error("ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node");console.error("See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility");return}var e={hex:true,utf8:true,"utf-8":true,ascii:true,binary:true,base64:true,ucs2:true,"ucs-2":true,utf16le:true,"utf-16le":true};Buffer.isNativeEncoding=function(i){return i&&e[i.toLowerCase()]};var f=require("buffer").SlowBuffer;c.SlowBufferToString=f.prototype.toString;f.prototype.toString=function(j,k,i){j=String(j||"utf8").toLowerCase();if(Buffer.isNativeEncoding(j)){return c.SlowBufferToString.call(this,j,k,i)}if(typeof k=="undefined"){k=0}if(typeof i=="undefined"){i=this.length}return a.decode(this.slice(k,i),j)};c.SlowBufferWrite=f.prototype.write;f.prototype.write=function(j,o,m,l){if(isFinite(o)){if(!isFinite(m)){l=m;m=undefined}}else{var n=l;l=o;o=m;m=n}o=+o||0;var k=this.length-o;if(!m){m=k}else{m=+m;if(m>k){m=k}}l=String(l||"utf8").toLowerCase();if(Buffer.isNativeEncoding(l)){return c.SlowBufferWrite.call(this,j,o,m,l)}if(j.length>0&&(m<0||o<0)){throw new RangeError("attempt to write beyond buffer bounds")}var i=a.encode(j,l);if(i.length<m){m=i.length}i.copy(this,o,0,m);return m};c.BufferIsEncoding=Buffer.isEncoding;Buffer.isEncoding=function(i){return Buffer.isNativeEncoding(i)||a.encodingExists(i)};c.BufferByteLength=Buffer.byteLength;Buffer.byteLength=f.byteLength=function(j,i){i=String(i||"utf8").toLowerCase();if(Buffer.isNativeEncoding(i)){return c.BufferByteLength.call(this,j,i)}return a.encode(j,i).length};c.BufferToString=Buffer.prototype.toString;Buffer.prototype.toString=function(j,k,i){j=String(j||"utf8").toLowerCase();if(Buffer.isNativeEncoding(j)){return c.BufferToString.call(this,j,k,i)}if(typeof k=="undefined"){k=0}if(typeof i=="undefined"){i=this.length}return a.decode(this.slice(k,i),j)};c.BufferWrite=Buffer.prototype.write;Buffer.prototype.write=function(p,o,j,k){var r=o,q=j,m=k;if(isFinite(o)){if(!isFinite(j)){k=j;j=undefined}}else{var l=k;k=o;o=j;j=l}k=String(k||"utf8").toLowerCase();if(Buffer.isNativeEncoding(k)){return c.BufferWrite.call(this,p,r,q,m)}o=+o||0;var n=this.length-o;if(!j){j=n}else{j=+j;if(j>n){j=n}}if(p.length>0&&(j<0||o<0)){throw new RangeError("attempt to write beyond buffer bounds")}var i=a.encode(p,k);if(i.length<j){j=i.length}i.copy(this,o,0,j);return j};if(a.supportsStreams){var g=require("stream").Readable;c.ReadableSetEncoding=g.prototype.setEncoding;g.prototype.setEncoding=function h(i,j){this._readableState.decoder=a.getDecoder(i,j);this._readableState.encoding=i};g.prototype.collect=a._collect}};a.undoExtendNodeEncodings=function d(){if(!a.supportsNodeEncodingsExtension){return}if(!c){throw new Error("require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.")}delete Buffer.isNativeEncoding;var e=require("buffer").SlowBuffer;e.prototype.toString=c.SlowBufferToString;e.prototype.write=c.SlowBufferWrite;Buffer.isEncoding=c.BufferIsEncoding;Buffer.byteLength=c.BufferByteLength;Buffer.prototype.toString=c.BufferToString;Buffer.prototype.write=c.BufferWrite;if(a.supportsStreams){var f=require("stream").Readable;f.prototype.setEncoding=c.ReadableSetEncoding;delete f.prototype.collect}c=undefined}};