"use strict";var Buffer=require("buffer").Buffer;var bomHandling=require("./bom-handling"),iconv=module.exports;iconv.encodings=null;iconv.defaultCharUnicode="�";iconv.defaultCharSingleByte="?";iconv.encode=function encode(f,e,b){f=""+(f||"");var d=iconv.getEncoder(e,b);var c=d.write(f);var a=d.end();return(a&&a.length>0)?Buffer.concat([c,a]):c};iconv.decode=function decode(c,e,b){if(typeof c==="string"){if(!iconv.skipDecodeWarning){console.error("Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding");iconv.skipDecodeWarning=true}c=new Buffer(""+(c||""),"binary")}var f=iconv.getDecoder(e,b);var d=f.write(c);var a=f.end();return a?(d+a):d};iconv.encodingExists=function encodingExists(a){try{iconv.getCodec(a);return true}catch(b){return false}};iconv.toEncoding=iconv.encode;iconv.fromEncoding=iconv.decode;iconv._codecDataCache={};iconv.getCodec=function getCodec(e){if(!iconv.encodings){iconv.encodings=require("../encodings")}var a=(""+e).toLowerCase().replace(/[^0-9a-z]|:\d{4}$/g,"");var c={};while(true){var f=iconv._codecDataCache[a];if(f){return f}var d=iconv.encodings[a];switch(typeof d){case"string":a=d;break;case"object":for(var b in d){c[b]=d[b]}if(!c.encodingName){c.encodingName=a}a=d.type;break;case"function":if(!c.encodingName){c.encodingName=a}f=new d(c,iconv);iconv._codecDataCache[c.encodingName]=f;return f;default:throw new Error("Encoding not recognized: '"+e+"' (searched as: '"+a+"')")}}};iconv.getEncoder=function getEncoder(c,a){var d=iconv.getCodec(c),b=new d.encoder(a,d);if(d.bomAware&&a&&a.addBOM){b=new bomHandling.PrependBOM(b,a)}return b};iconv.getDecoder=function getDecoder(b,a){var c=iconv.getCodec(b),d=new c.decoder(a,c);if(c.bomAware&&!(a&&a.stripBOM===false)){d=new bomHandling.StripBOM(d,a)}return d};var nodeVer=typeof process!=="undefined"&&process.versions&&process.versions.node;if(nodeVer){var nodeVerArr=nodeVer.split(".").map(Number);if(nodeVerArr[0]>0||nodeVerArr[1]>=10){require("./streams")(iconv)}require("./extend-node")(iconv)}if("Ā"!="\u0100"){console.error("iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.")};