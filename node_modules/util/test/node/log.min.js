var assert=require("assert");var util=require("../../");assert.ok(process.stdout.writable);assert.ok(process.stderr.writable);var stdout_write=global.process.stdout.write;var strings=[];global.process.stdout.write=function(a){strings.push(a)};console._stderr=process.stdout;var tests=[{input:"foo",output:"foo"},{input:undefined,output:"undefined"},{input:null,output:"null"},{input:false,output:"false"},{input:42,output:"42"},{input:function(){},output:"[Function]"},{input:parseInt("not a number",10),output:"NaN"},{input:{answer:42},output:"{ answer: 42 }"},{input:[1,2,3],output:"[ 1, 2, 3 ]"}];tests.forEach(function(d){util.log(d.input);var a=strings.shift().trim(),c=(/[0-9]{1,2} [A-Z][a-z]{2} [0-9]{2}:[0-9]{2}:[0-9]{2} - (.+)$/),b=c.exec(a);assert.ok(b);assert.equal(b[1],d.output)});global.process.stdout.write=stdout_write;