/*!
 * negotiator
 * Copyright(c) 2012 Federico Romero
 * Copyright(c) 2012-2014 Isaac Z. Schlueter
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */
;"use strict";var modules=Object.create(null);module.exports=Negotiator;module.exports.Negotiator=Negotiator;function Negotiator(a){if(!(this instanceof Negotiator)){return new Negotiator(a)}this.request=a}Negotiator.prototype.charset=function charset(a){var b=this.charsets(a);return b&&b[0]};Negotiator.prototype.charsets=function charsets(b){var a=loadModule("charset").preferredCharsets;return a(this.request.headers["accept-charset"],b)};Negotiator.prototype.encoding=function encoding(a){var b=this.encodings(a);return b&&b[0]};Negotiator.prototype.encodings=function encodings(b){var a=loadModule("encoding").preferredEncodings;return a(this.request.headers["accept-encoding"],b)};Negotiator.prototype.language=function language(a){var b=this.languages(a);return b&&b[0]};Negotiator.prototype.languages=function languages(a){var b=loadModule("language").preferredLanguages;return b(this.request.headers["accept-language"],a)};Negotiator.prototype.mediaType=function mediaType(a){var b=this.mediaTypes(a);return b&&b[0]};Negotiator.prototype.mediaTypes=function mediaTypes(a){var b=loadModule("mediaType").preferredMediaTypes;return b(this.request.headers.accept,a)};Negotiator.prototype.preferredCharset=Negotiator.prototype.charset;Negotiator.prototype.preferredCharsets=Negotiator.prototype.charsets;Negotiator.prototype.preferredEncoding=Negotiator.prototype.encoding;Negotiator.prototype.preferredEncodings=Negotiator.prototype.encodings;Negotiator.prototype.preferredLanguage=Negotiator.prototype.language;Negotiator.prototype.preferredLanguages=Negotiator.prototype.languages;Negotiator.prototype.preferredMediaType=Negotiator.prototype.mediaType;Negotiator.prototype.preferredMediaTypes=Negotiator.prototype.mediaTypes;function loadModule(a){var b=modules[a];if(b!==undefined){return b}switch(a){case"charset":b=require("./lib/charset");break;case"encoding":b=require("./lib/encoding");break;case"language":b=require("./lib/language");break;case"mediaType":b=require("./lib/mediaType");break;default:throw new Error("Cannot find module '"+a+"'")}modules[a]=b;return b};