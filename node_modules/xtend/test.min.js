var test=require("tape");var extend=require("./");var mutableExtend=require("./mutable");test("merge",function(e){var d={a:"foo"};var c={b:"bar"};e.deepEqual(extend(d,c),{a:"foo",b:"bar"});e.end()});test("replace",function(e){var d={a:"foo"};var c={a:"bar"};e.deepEqual(extend(d,c),{a:"bar"});e.end()});test("undefined",function(e){var d={a:undefined};var c={b:"foo"};e.deepEqual(extend(d,c),{a:undefined,b:"foo"});e.deepEqual(extend(c,d),{a:undefined,b:"foo"});e.end()});test("handle 0",function(e){var d={a:"default"};var c={a:0};e.deepEqual(extend(d,c),{a:0});e.deepEqual(extend(c,d),{a:"default"});e.end()});test("is immutable",function(b){var a={};extend(a,{foo:"bar"});b.equal(a.foo,undefined);b.end()});test("null as argument",function(f){var e={foo:"bar"};var d=null;var g=void 0;f.deepEqual(extend(d,e,g),{foo:"bar"});f.end()});test("mutable",function(c){var b={foo:"bar"};mutableExtend(b,{bar:"baz"});c.equal(b.bar,"baz");c.end()});test("null prototype",function(e){var d={a:"foo"};var c=Object.create(null);c.b="bar";e.deepEqual(extend(d,c),{a:"foo",b:"bar"});e.end()});test("null prototype mutable",function(e){var d={foo:"bar"};var c=Object.create(null);c.bar="baz";mutableExtend(d,c);e.equal(d.bar,"baz");e.end()});