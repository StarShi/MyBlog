var assert=require("assert");var Dicer=require(".."),boundary="-----------------------------168072824752491622650073",d=new Dicer({boundary:boundary}),mb=100,buffer=createMultipartBuffer(boundary,mb*1024*1024),callbacks={partBegin:-1,partEnd:-1,headerField:-1,headerValue:-1,partData:-1,end:-1};d.on("part",function(a){callbacks.partBegin++;a.on("header",function(b){});a.on("data",function(b){callbacks.partData++});a.on("end",function(){callbacks.partEnd++})});d.on("end",function(){callbacks.end++});var start=+new Date(),nparsed=d.write(buffer),duration=+new Date-start,mbPerSec=(mb/(duration/1000)).toFixed(2);console.log(mbPerSec+" mb/sec");function createMultipartBuffer(f,e){var c="--"+f+'\r\ncontent-disposition: form-data; name="field1"\r\n\r\n',b="\r\n--"+f+"--\r\n",a=new Buffer(e);a.write(c,"ascii",0);a.write(b,"ascii",a.length-b.length);return a}process.on("exit",function(){});