"use strict";module.exports=function(f,c,h,b){var a=require("./util");var g=a.tryCatch;var e=a.errorObj;var d=f._async;f.prototype["break"]=f.prototype.cancel=function(){if(!b.cancellation()){return this._warn("cancellation is disabled")}var j=this;var k=j;while(j._isCancellable()){if(!j._cancelBy(k)){if(k._isFollowing()){k._followee().cancel()}else{k._cancelBranched()}break}var i=j._cancellationParent;if(i==null||!i._isCancellable()){if(j._isFollowing()){j._followee().cancel()}else{j._cancelBranched()}break}else{if(j._isFollowing()){j._followee().cancel()}j._setWillBeCancelled();k=j;j=i}}};f.prototype._branchHasCancelled=function(){this._branchesRemainingToCancel--};f.prototype._enoughBranchesHaveCancelled=function(){return this._branchesRemainingToCancel===undefined||this._branchesRemainingToCancel<=0};f.prototype._cancelBy=function(i){if(i===this){this._branchesRemainingToCancel=0;this._invokeOnCancel();return true}else{this._branchHasCancelled();if(this._enoughBranchesHaveCancelled()){this._invokeOnCancel();return true}}return false};f.prototype._cancelBranched=function(){if(this._enoughBranchesHaveCancelled()){this._cancel()}};f.prototype._cancel=function(){if(!this._isCancellable()){return}this._setCancelled();d.invoke(this._cancelPromises,this,undefined)};f.prototype._cancelPromises=function(){if(this._length()>0){this._settlePromises()}};f.prototype._unsetOnCancel=function(){this._onCancelField=undefined};f.prototype._isCancellable=function(){return this.isPending()&&!this._isCancelled()};f.prototype.isCancellable=function(){return this.isPending()&&!this.isCancelled()};f.prototype._doInvokeOnCancel=function(l,k){if(a.isArray(l)){for(var j=0;j<l.length;++j){this._doInvokeOnCancel(l[j],k)}}else{if(l!==undefined){if(typeof l==="function"){if(!k){var m=g(l).call(this._boundValue());if(m===e){this._attachExtraTrace(m.e);d.throwLater(m.e)}}}else{l._resultCancelled(this)}}}};f.prototype._invokeOnCancel=function(){var i=this._onCancel();this._unsetOnCancel();d.invoke(this._doInvokeOnCancel,this,i)};f.prototype._invokeInternalOnCancel=function(){if(this._isCancellable()){this._doInvokeOnCancel(this._onCancel(),true);this._unsetOnCancel()}};f.prototype._resultCancelled=function(){this.cancel()}};